SeaV4X

TODO list:
		permissions
	Next milestone: permissions


Pie-in-Sky List:
	Move socket reading and parsing to own thread
	Scripting
	Command masking
	Plugin loading
	Move over to sql backend


Command system stored on file as:

Domain Listing
ID, Domain name, Parent name, Help Info (? command)

Command Listing
ID, Command name, domain id, help info


Command packet: \t acts as pipe between commands, \n starts fresh
	<Echo String> | <command> <parameters> ;

Client side echos:
	GUI - automated stuff, don't show to console)
	PING - Calls server to push data to client
		Server attempts to send buffered 'push' data to client
		that accumulated since last ping. Help track lagging clients
	CON - Show to console
	RAW - Show to console in raw table form
	

User structures:
	Account - Persistent storage of user data, bound to permissions. Permissions
		are per command or per domain (recursive include)
	Client  - A connected user.

	Parent -> *child
	-----------------
	Client -> *account
	Account -> *player
	
	Server keeps list of accounts and clients
	
Permissions:
	- Per account, default is no permission
	- Add (sub)domain
	- Add command
	- Allowed to pipe data
	
In game player structure:
	Teams have lists of players


Server response format:
Header \n
Col   1 \t Col   2 \t Col   3 . . . \t  \n
val   1 \t val   2 \t val   3 . . . \t
val n+1 \t val n+2 \t val n+3 . . . \t
... \n


Server command function parameters:
- Pipe in : Pointer to pipe-in table structure
- Pipe out: Pointer to pipe-out table structure
- Error pipe: Error data structure, contains 'stack trace'?
- Parameter list structure
- Pointer to account to act on behalf
- Pointer to server data structure
Pipe in pointers will be null if no permission given to use pipes


Account format:
/index.txt
	- Global list of active accounts

/account/<account name>
	- Directory of information for a given account

/account/<account name>/info.txt
	- Primary information about account
	- Password

/account/<account name>/permission.txt
	- List of permissions
	- Format: [+ | * | -] \t [directory name | permission class if *]


Plugin API:
  registerAPI()      - Called for registering plugin API
  onPluginPreload()  - Called before plugin APIs are registered
  onPluginPostLoad() - Called after plugin API is registered

  
Maze game package levels:
  Free  ($0.00):  1 Map  allowed, Can start 1v1 games, can enter 1v1 games,  10 messages per minute, can use 10x10 maps
  Entry ($0.99):  3 Maps allowed, Can start 1v1 games, can enter 3v3 games,  20 messages per minute, can use 20x20 maps
  Silver($4.99): 10 Maps allowed, Can start 3v3 games, can enter 9v9 games, 120 messages per minute, can use 30x30 maps
  Gold  ($9.99): 50 Maps allowed, Can start 9v9 games, can enter 9v9 games, 120 messages per minute, can use 50x50 maps
